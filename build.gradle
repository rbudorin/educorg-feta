repositories {
    mavenLocal()
    jcenter()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.9.45")
    }
}

ext{
    serenity_version = "1.9.45"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

dependencies {
    compile localGroovy()
    compile "net.serenity-bdd:serenity-core:$serenity_version"
    compile "net.serenity-bdd:serenity-rest-assured:$serenity_version"
    compile 'junit:junit:4.12'
    compile "net.serenity-bdd:serenity-junit:$serenity_version"
    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'org.assertj:assertj-core:3.1.0'
}

tasks.withType(Test) {

    include '**/**/**.class'

    testLogging {
        showStandardStreams = true
    }

    ignoreFailures = true
    maxParallelForks = 1

    systemProperties System.getProperties()
    systemProperty 'test.environment', 'development'
    systemProperty 'serenity.project.name', 'Studorg'
    systemProperty 'webdriver.base.url', 'http://localhost:8080'
    systemProperty 'webdriver.driver', 'provided'
    systemProperty 'webdriver.provided.type', 'custom'
    systemProperty 'webdriver.provided.custom', 'org.studwork.drivers.GoogleChromeDriverSource'
    systemProperty 'serenity.driver.capabilities', 'custom'
    systemProperty 'webdriver.timeouts.implicitlywait', '1000'
    systemProperty 'webdriver.wait.for.timeout', '1000'
    systemProperty 'serenity.test.root', 'com.tsum.tests'
    systemProperty 'serenity.take.screenshots', 'BEFORE_AND_AFTER_EACH_STEP'
    systemProperty 'serenity.verbose.steps', 'true'
    systemProperty 'serenity.reports.show.step.details', 'true'
    systemProperty 'serenity.report.show.manual.tests', 'true'
    systemProperty 'serenity.step.delay', '0'
    systemProperty 'untrusted.certificates', 'true'
    systemProperty 'serenity.timeout', '12000'
    systemProperty 'serenity.browser.width', '1400'
    systemProperty 'serenity.browser.height', '900'
    systemProperty 'serenity.native.events', 'true'
    systemProperty 'serenity.logging', 'VERBOSE'
    systemProperty 'serenity.console.headings', 'normal'
    systemProperty 'simplified.stack.traces', 'false'
    systemProperty 'serenity.console.colors', 'true'
    systemProperty 'serenity.data.dir', 'test-data'
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into project.projectDir.path + "/lib"
}

gradle.startParameter.continueOnFailure = true